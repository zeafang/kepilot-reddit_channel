name: Reddit Tracker (manual + Pacific midnight)

on:
  # Auto triggers: 07:00 UTC (PDT midnight) and 08:00 UTC (PST midnight)
  schedule:
    - cron: "0 7 * * *"
    - cron: "0 8 * * *"
  # Manual trigger from Actions tab
  workflow_dispatch:

permissions:
  contents: write

jobs:
  run:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Show current time (UTC & PT)
        run: |
          echo "UTC now: $(date -u '+%Y-%m-%d %H:%M:%S %Z')"
          TZ=America/Los_Angeles date '+PT  now: %Y-%m-%d %H:%M:%S %Z'

      # Decide whether to proceed:
      # - Always proceed for manual runs
      # - For scheduled runs, only proceed if local PT hour is 00 (midnight)
      - name: Decide gate
        id: decide
        run: |
          export TZ=America/Los_Angeles
          HOUR="$(date '+%H')"
          echo "Local PT hour=${HOUR}"
          if [ "${HOUR}" = "00" ]; then
            echo "run=true" >> "$GITHUB_OUTPUT"
          else
            echo "run=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Show runner Python
        if: ${{ github.event_name == 'workflow_dispatch' || steps.decide.outputs.run == 'true' }}
        run: |
          which python3 || true
          python3 --version
          which pip3 || true
          pip3 --version || true

      - name: Install dependencies
        if: ${{ github.event_name == 'workflow_dispatch' || steps.decide.outputs.run == 'true' }}
        working-directory: reddit_tracker
        run: |
          python3 -m pip install --upgrade pip
          if [ -f requirements.txt ]; then
            python3 -m pip install -r requirements.txt
          else
            python3 -m pip install praw pandas python-dotenv
          fi

      - name: Check secrets presence (masked)
        if: ${{ github.event_name == 'workflow_dispatch' || steps.decide.outputs.run == 'true' }}
        env:
          REDDIT_CLIENT_ID: ${{ secrets.REDDIT_CLIENT_ID }}
          REDDIT_CLIENT_SECRET: ${{ secrets.REDDIT_CLIENT_SECRET }}
          REDDIT_USERNAME: ${{ secrets.REDDIT_USERNAME }}
          REDDIT_PASSWORD: ${{ secrets.REDDIT_PASSWORD }}
          REDDIT_USER_AGENT: ${{ secrets.REDDIT_USER_AGENT }}
        run: |
          echo "Has CLIENT_ID?      $([ -n "${REDDIT_CLIENT_ID}" ] && echo yes || echo no)"
          echo "Has CLIENT_SECRET?  $([ -n "${REDDIT_CLIENT_SECRET}" ] && echo yes || echo no)"
          echo "Has USERNAME?       $([ -n "${REDDIT_USERNAME}" ] && echo yes || echo no)"
          echo "Has PASSWORD?       $([ -n "${REDDIT_PASSWORD}" ] && echo yes || echo no)"
          echo "Has USER_AGENT?     $([ -n "${REDDIT_USER_AGENT}" ] && echo yes || echo no)"

      - name: Auth smoke test
        if: ${{ github.event_name == 'workflow_dispatch' || steps.decide.outputs.run == 'true' }}
        working-directory: reddit_tracker
        env:
          REDDIT_CLIENT_ID: ${{ secrets.REDDIT_CLIENT_ID }}
          REDDIT_CLIENT_SECRET: ${{ secrets.REDDIT_CLIENT_SECRET }}
          REDDIT_USERNAME: ${{ secrets.REDDIT_USERNAME }}
          REDDIT_PASSWORD: ${{ secrets.REDDIT_PASSWORD }}
          REDDIT_USER_AGENT: ${{ secrets.REDDIT_USER_AGENT }}
        run: |
          python3 - << 'PY'
import os, praw
r = praw.Reddit(
  client_id=os.environ["REDDIT_CLIENT_ID"],
  client_secret=os.environ["REDDIT_CLIENT_SECRET"],
  username=os.environ["REDDIT_USERNAME"],
  password=os.environ["REDDIT_PASSWORD"],
  user_agent=os.environ["REDDIT_USER_AGENT"],
)
print("Authenticated user:", r.user.me())
PY

      - name: Run tracker
        if: ${{ github.event_name == 'workflow_dispatch' || steps.decide.outputs.run == 'true' }}
        working-directory: reddit_tracker
        env:
          REDDIT_CLIENT_ID: ${{ secrets.REDDIT_CLIENT_ID }}
          REDDIT_CLIENT_SECRET: ${{ secrets.REDDIT_CLIENT_SECRET }}
          REDDIT_USERNAME: ${{ secrets.REDDIT_USERNAME }}
          REDDIT_PASSWORD: ${{ secrets.REDDIT_PASSWORD }}
          REDDIT_USER_AGENT: ${{ secrets.REDDIT_USER_AGENT }}
        run: python3 -u reddit_post_tracker.py

      - name: Record timestamp file
        if: ${{ github.event_name == 'workflow_dispatch' || steps.decide.outputs.run == 'true' }}
        working-directory: reddit_tracker
        run: |
          mkdir -p reddit_metrics
          echo "UTC: $(date -u '+%Y-%m-%d %H:%M:%S %Z')" > reddit_metrics/last_run_time.txt
          TZ=America/Los_Angeles date '+PT:  %Y-%m-%d %H:%M:%S %Z' >> reddit_metrics/last_run_time.txt
          echo "MODE: $([[ '${{ github.event_name }}' == 'workflow_dispatch' ]] && echo manual || echo scheduled)" >> reddit_metrics/last_run_time.txt

      - name: Commit outputs (CSVs + timestamp)
        if: ${{ github.event_name == 'workflow_dispatch' || steps.decide.outputs.run == 'true' }}
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "chore: update reddit metrics"
          file_pattern: |
            reddit_tracker/reddit_metrics/*.csv
            reddit_tracker/reddit_metrics/last_run_time.txt

      - name: Run summary
        if: ${{ github.event_name == 'workflow_dispatch' || steps.decide.outputs.run == 'true' }}
        working-directory: reddit_tracker
        run: |
          {
            echo "### Reddit Tracker"
            TZ=America/Los_Angeles date '+- Local PT time: %Y-%m-%d %H:%M:%S %Z'
            echo "- Mode: $([[ '${{ github.event_name }}' == 'workflow_dispatch' ]] && echo manual || echo scheduled)"
            if [ -f reddit_metrics/post_metrics_timeseries.csv ]; then
              echo "- timeseries rows: $(wc -l < reddit_metrics/post_metrics_timeseries.csv)"
            else
              echo "- timeseries rows: (not written this run)"
            fi
            if [ -f reddit_metrics/post_metrics_latest_with_growth.csv ]; then
              echo "- latest_with_growth rows: $(wc -l < reddit_metrics/post_metrics_latest_with_growth.csv)"
            else
              echo "- latest_with_growth rows: (not created yet)"
            fi
            echo "- timestamp file present: $( [ -f reddit_metrics/last_run_time.txt ] && echo yes || echo no )"
          } >> "$GITHUB_STEP_SUMMARY"


